<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="433133e0-488e-4663-8763-f3e92e0213c2" activeEnvironment="Default" name="REST ASSERTION" soapui-version="5.2.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="dd433c3f-eedc-4b6e-a0af-06bbe382b714" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://maps.googleapis.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://DELL-PC:8089/</con:endpoint><con:endpoint>http://maps.googleapis.com</con:endpoint></con:endpoints><con:resource name="Json" path="/maps/api/geocode/json" id="80b0b410-013c-4ce5-b445-3eb66a3731de"><con:settings/><con:parameters><con:parameter><con:name>address</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sensor</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Json" id="23796f45-526e-477c-807c-fa976af4e796" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:json="http://maps.googleapis.com/maps/api/geocode/json">json:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:json="http://maps.googleapis.com/maps/api/geocode/json">json:Fault</con:element></con:representation><con:request name="Request 1" id="97a5d650-874d-4a56-9c29-65821c8a3a0d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://maps.googleapis.com</con:endpoint><con:request/><con:originalUri>http://maps.googleapis.com/maps/api/geocode/json</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sensor" value="false"/>
  <con:entry key="address" value="chicago"/>
</con:parameters><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="14ee5bdc-76b9-49eb-b1bd-0001b2fc3375" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="21215222-4cfa-4ab8-b52b-b76b9bd5c55c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Json - Request 2" id="c0fed4f1-b7af-485e-b13d-00838ec3fef3"><con:settings/><con:config service="http://maps.googleapis.com" resourcePath="/maps/api/geocode/json" methodName="Json" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Json - Request 1" id="97a5d650-874d-4a56-9c29-65821c8a3a0d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://maps.googleapis.com</con:endpoint><con:request/><con:originalUri>http://maps.googleapis.com/maps/api/geocode/json</con:originalUri><con:assertion type="Simple Contains" id="f1002063-b58c-4b39-beb0-a1e9de543568" name="Contains"><con:configuration><token>OK</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="sensor" value="false"/>
  <con:entry key="address" value="chicago"/>
</con:parameters><con:parameterOrder><con:entry>address</con:entry><con:entry>sensor</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="54846f8f-3628-4c84-88d0-5d62663ee53c" port="8089" path="/" host="DELL-PC" name="REST MockService 1"><con:settings/><con:properties><con:property><con:name>address</con:name><con:value>chicago</con:value></con:property><con:property><con:name>sensor</con:name><con:value>false</con:value></con:property></con:properties><con:restMockAction name="/maps/api/geocode/json" method="GET" resourcePath="/maps/api/geocode/json" id="962139a8-b9e8-4549-bc88-b1074580f356"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="9923b4bf-380a-4559-91ca-10edf170d8db" httpResponseStatus="200" mediaType="text/xml"><con:settings/><con:responseContent/></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>